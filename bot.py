import os
import random
import asyncio
from aiogram import Bot, Dispatcher, types
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton, FSInputFile
from aiogram.enums import ParseMode
from aiogram.filters import CommandStart
from apscheduler.schedulers.asyncio import AsyncIOScheduler
from aiogram.client.default import DefaultBotProperties
from pytz import timezone


# üîê –¢–æ–∫–µ–Ω –∏ ID –ù–∞—Å—Ç–∏
BOT_TOKEN = "7551500537:AAHXDafFbKUPf_WSTFP2GrN5LZCfbLuq7yc"
NASTYA_CHAT_ID = 813196147

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞ –∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞
bot = Bot(
    token=BOT_TOKEN,
    default=DefaultBotProperties(parse_mode=ParseMode.HTML)
)
dp = Dispatcher()

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞
keyboard = ReplyKeyboardMarkup(
    keyboard=[
        [KeyboardButton(text="–º–Ω–µ –≥—Ä—É—Å—Ç–Ω–æ üò¢"), KeyboardButton(text="–º–Ω–µ –≤–µ—Å–µ–ª–æ üòä")],
        [KeyboardButton(text="–º–Ω–µ –æ–¥–∏–Ω–æ–∫–æ üè†"), KeyboardButton(text="–∑–∞–µ–±–ª–∞ —ç—Ç–∞ —É—á—ë–±–∞ üìö")],
    ],
    resize_keyboard=True
)

# –°–ø–∏—Å–æ–∫ –ø–æ–∂–µ–ª–∞–Ω–∏–π
morning_wishes = [
    "–î–æ–±—Ä–æ–µ —É—Ç—Ä–æ, –ù–∞—Å—Ç–µ–Ω—å–∫–∞! üåû –ü—É—Å—Ç—å —ç—Ç–æ—Ç –¥–µ–Ω—å –ø—Ä–∏–Ω–µ—Å—ë—Ç —Ç–µ–±–µ —É–ª—ã–±–∫–∏, –ª—ë–≥–∫–æ—Å—Ç—å –∏ –∫–∞–ø–µ–ª—å–∫—É –≤–æ–ª—à–µ–±—Å—Ç–≤–∞!",
    "–ü—Ä–æ—Å—ã–ø–∞–π—Å—è, –ù–∞—Å—Ç—è! ‚òÄÔ∏è –°–µ–≥–æ–¥–Ω—è ‚Äî –∏–¥–µ–∞–ª—å–Ω—ã–π –¥–µ–Ω—å –¥–ª—è –º–∞–ª–µ–Ω—å–∫–∏—Ö —Ä–∞–¥–æ—Å—Ç–µ–π –∏ –±–æ–ª—å—à–∏—Ö —Å–≤–µ—Ä—à–µ–Ω–∏–π!",
    "–î–æ–±—Ä–æ–µ —É—Ç—Ä–æ, –ù–∞—Å—Ç—è! üíñ –ü—É—Å—Ç—å –≤—Å—ë —Å–ª–æ–∂–∏—Ç—Å—è –∏–º–µ–Ω–Ω–æ —Ç–∞–∫, –∫–∞–∫ —Ç—ã –∑–∞—Ö–æ—á–µ—à—å, –∞ –¥–µ–Ω—å –±—É–¥–µ—Ç –¥–æ–±—Ä—ã–º –∏ —Å–≤–µ—Ç–ª—ã–º!",
    "–ù–∞—Å—Ç—å, –¥–æ–±—Ä–æ–µ —É—Ç—Ä–æ! üå∏ –ü—É—Å—Ç—å —Å–µ–≥–æ–¥–Ω—è —Ç–µ–±—è –∂–¥—ë—Ç —á—Ç–æ-—Ç–æ –ø—Ä–µ–∫—Ä–∞—Å–Ω–æ–µ –∏ –≤–æ–ª—à–µ–±–Ω–æ–µ",
    "–î–æ–±—Ä–æ–µ —É—Ç—Ä–æ, –ù–∞—Å—Ç—è! üåà –ü—É—Å—Ç—å –¥–µ–Ω—å –±—É–¥–µ—Ç —Ç–∞–∫–∏–º –∂–µ —è—Ä–∫–∏–º, –∫–∞–∫ —Ç–≤–æ–∏ –≥–ª–∞–∑–∞, –∏ —Ç–∞–∫–∏–º –∂–µ —Ç—ë–ø–ª—ã–º, –∫–∞–∫ —Ç–≤–æ—ë —Å–µ—Ä–¥—Ü–µ!",
    "–ü—Ä–æ—Å–Ω–∏—Å—å –∏ —É–ª—ã–±–Ω–∏—Å—å! üòä –°–µ–≥–æ–¥–Ω—è—à–Ω–∏–π –¥–µ–Ω—å —Å–æ–∑–¥–∞–Ω –¥–ª—è —Å—á–∞—Å—Ç—å—è ‚Äî –Ω–µ —É–ø—É—Å—Ç–∏ –µ–≥–æ!",
    "–ù–∞—Å—Ç–µ–Ω—å–∫–∞, –¥–æ–±—Ä–æ–µ —É—Ç—Ä–æ! üåπ –ü—É—Å—Ç—å —Å–µ–≥–æ–¥–Ω—è –≤—Å—ë –ø–æ–ª—É—á–∞–µ—Ç—Å—è –ª–µ–≥–∫–æ, –∞ –ª—é–±–∞—è –≥—Ä—É—Å—Ç—å —Ä–∞—Å—Ç–≤–æ—Ä—è–µ—Ç—Å—è –≤ —Ç–≤–æ–µ–π —É–ª—ã–±–∫–µ!",
    "–£—Ç—Ä–æ –Ω–∞—á–∞–ª–æ—Å—å, –∞ –∑–Ω–∞—á–∏—Ç, –≥–¥–µ-—Ç–æ —Ä—è–¥–æ–º —É–∂–µ –∂–¥—ë—Ç —á—Ç–æ-—Ç–æ —Ö–æ—Ä–æ—à–µ–µ! ‚ú® –î–µ—Ä–∂–∏ —Ö–≤–æ—Å—Ç –ø–∏—Å—Ç–æ–ª–µ—Ç–æ–º, –∫—Ä–∞—Å–∞–≤–∏—Ü–∞!",
    "–î–æ–±—Ä–æ–µ —É—Ç—Ä–æ, –ù–∞—Å—Ç—è! üêá –ü—É—Å—Ç—å –¥–µ–Ω—å –±—É–¥–µ—Ç –Ω–∞–ø–æ–ª–Ω–µ–Ω –ø—Ä–∏—è—Ç–Ω—ã–º–∏ –º–æ–º–µ–Ω—Ç–∞–º–∏, –∞ –≤—Å–µ —Ç—Ä–µ–≤–æ–≥–∏ –æ–±–æ–π–¥—É—Ç —Ç–µ–±—è —Å—Ç–æ—Ä–æ–Ω–æ–π!",
    "–°–æ–ª–Ω—Ü–µ —Å–≤–µ—Ç–∏—Ç —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ –¥–ª—è —Ç–µ–±—è! ‚òÄÔ∏èüíõ –ü—É—Å—Ç—å —ç—Ç–æ—Ç –¥–µ–Ω—å –ø–æ–¥–∞—Ä–∏—Ç —Ç–µ–±–µ –≤–¥–æ—Ö–Ω–æ–≤–µ–Ω–∏–µ –∏ —Å–æ—Ç–Ω—é –ø–æ–≤–æ–¥–æ–≤ –¥–ª—è —Ä–∞–¥–æ—Å—Ç–∏!"
]

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —É—Ç—Ä–µ–Ω–Ω–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è ‚Äî –≤—ã–±–∏—Ä–∞–µ—Ç —Å–ª—É—á–∞–π–Ω–æ–µ –ø–æ–∂–µ–ª–∞–Ω–∏–µ
async def send_morning():
    try:
        wish = random.choice(morning_wishes)
        await bot.send_message(NASTYA_CHAT_ID, wish)
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —É—Ç—Ä–µ–Ω–Ω–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")

# –î–Ω–µ–≤–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ 16:00
async def send_afternoon():
    try:
        await bot.send_message(NASTYA_CHAT_ID, "–ù–∞—Å—Ç—è, –ø—Ä–∏–≤–µ—Ç, –∫–∞–∫–æ–µ —É —Ç–µ–±—è —Å–µ–≥–æ–¥–Ω—è –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ?üå∏")
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –¥–Ω–µ–≤–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")


# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞ —Å –º–æ—Å–∫–æ–≤—Å–∫–∏–º –≤—Ä–µ–º–µ–Ω–µ–º
def setup_scheduler():
    moscow_tz = timezone('Europe/Moscow')
    scheduler = AsyncIOScheduler(timezone=moscow_tz)
    scheduler.add_job(send_morning, trigger='cron', hour=10, minute=0)
    scheduler.add_job(send_afternoon, trigger='cron', hour=16, minute=0)
    scheduler.start()

# –ö–æ–º–∞–Ω–¥–∞ /start
@dp.message(CommandStart())
async def cmd_start(message: types.Message):
    await message.answer("–ü—Ä–∏–≤–µ—Ç, –ù–∞—Å—Ç—è! –ö–∞–∫–æ–µ —É —Ç–µ–±—è —Å–µ–≥–æ–¥–Ω—è –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ?üå∏", reply_markup=keyboard)

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏–π –Ω–∞ –∫–Ω–æ–ø–∫–∏
@dp.message()
async def handle_buttons(message: types.Message):
    text = message.text.lower().strip()

    folders = {
        "–º–Ω–µ –≥—Ä—É—Å—Ç–Ω–æ üò¢": "media/sad",
        "–º–Ω–µ –≤–µ—Å–µ–ª–æ üòä": "media/happy",
        "–º–Ω–µ –æ–¥–∏–Ω–æ–∫–æ üè†": "media/lonely",
        "–∑–∞–µ–±–ª–∞ —ç—Ç–∞ —É—á—ë–±–∞ üìö": "media/busy"
    }

    if text in folders:
        folder = folders[text]
        if not os.path.exists(folder):
            await message.answer("–ù–∞—Å—Ç—å, –ø–∞–ø–∫–∞ —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ üò¢, —Å–∫–∞–∂–∏ –ì—Ä–∏—à–µ, –æ–Ω —Å–∫–æ—Ä–æ –≤—Å—ë –∏—Å–ø—Ä–∞–≤–∏—Ç")
            return

        images = [f for f in os.listdir(folder) if f.lower().endswith(('.png', '.jpg', '.jpeg', '.webp'))]
        if images:
            path = os.path.join(folder, random.choice(images))
            photo = FSInputFile(path)
            await bot.send_photo(chat_id=message.chat.id, photo=photo)
        else:
            await message.answer("–ù–∞—Å—Ç—å, –ø–æ–∫–∞ –Ω–µ—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –≤ —ç—Ç–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ ü•∫, —Å–∫–∞–∂–∏ –ì—Ä–∏—à–µ, –æ–Ω —Å–∫–æ—Ä–æ –≤—Å—ë –∏—Å–ø—Ä–∞–≤–∏—Ç")
    else:
        await message.answer("–ù–∞—Å—Ç—å, –∫–∞–∫–æ–µ —É —Ç–µ–±—è –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ —Å–µ–≥–æ–¥–Ω—è?üòä")

# –û—Å–Ω–æ–≤–Ω–æ–π –∑–∞–ø—É—Å–∫
async def main():
    setup_scheduler()
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())
